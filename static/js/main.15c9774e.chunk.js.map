{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","auth","firestore","SignIn","className","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","event","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","value","onChange","target","props","messageClass","title","src","alt","App","useAuthState","user","console","log","displayName","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+QAUAA,IAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,6BACZC,YAAa,oCACbC,UAAW,aACXC,cAAe,yBACfC,kBAAmB,eACnBC,MAAO,8CAGT,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAyB3B,SAASC,IAMP,OACE,wBAAQC,UAAU,SAASC,QANJ,WACvB,IAAMC,EAAW,IAAId,IAASS,KAAKM,mBACnCN,EAAKO,gBAAgBF,IAIrB,iCAIJ,SAASG,IACP,OAAOR,EAAKS,aACV,wBAASN,UAAU,UAAUC,QAAS,kBAAMJ,EAAKU,WAAjD,sBAIJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcb,EAAUc,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHnC,EAICC,YAAkBH,EAAO,CAACI,QAAS,OAA/CC,EAJW,sBAKgBC,mBAAS,IALzB,mBAKXC,EALW,KAKAC,EALA,KAMZC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAME,iBADY,EAEQ5B,EAAKS,YAAvBoB,EAFU,EAEVA,IAAKC,EAFK,EAELA,SAFK,SAGZhB,EAAYiB,IAAI,CACpBC,KAAMT,EACNU,UAAW1C,IAASU,UAAUiC,WAAWC,kBACzCN,MACAC,aAPgB,OAUlBN,EAAa,IACbZ,EAAMwB,QAAQC,eAAe,CAAEC,SAAU,WAXvB,2CAAH,sDAcjB,OACE,qCACE,sBAAKnC,UAAU,OAAf,UACGkB,GAAYA,EAASkB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,qBAAKxC,UAAU,QAAQyC,IAAKhC,OAE9B,uBAAOT,UAAU,UAAjB,SACE,uBAAMA,UAAU,OAAhB,UACE,uBAAO0C,MAAOtB,EAAWuB,SAAU,SAAApB,GAAK,OAAIF,EAAaE,EAAMqB,OAAOF,UACtE,wBAAQzC,QAASqB,EAAjB,0BAOV,SAASgB,EAAYO,GAAQ,IAAD,EACMA,EAAMN,QAA9BV,EADkB,EAClBA,KAAMH,EADY,EACZA,IAAKC,EADO,EACPA,SACbmB,EAAepB,IAAQ7B,EAAKS,YAAYoB,IAAM,OAAS,WAC7D,OACE,sBAAK1B,UAAS,kBAAa8C,GAAgBC,MAAM,KAAjD,UACE,qBAAKC,IAAKrB,EAAUsB,IAAI,KACxB,+BAAOpB,OAKEqB,MAvFf,WAAgB,IAAD,EACEC,YAAatD,GAArBuD,EADM,oBAIb,OAFAC,QAAQC,IAAIF,GAGV,sBAAKpD,UAAU,MAAf,UACE,qBAAKA,UAAU,eACdoD,GACC,yBAAQpD,UAAU,SAAlB,UACE,sBAAKA,UAAU,OAAf,UACE,qBAAKgD,IAAKI,EAAKzB,SAAUsB,IAAI,KAC7B,+BAAOG,EAAKG,iBAEd,cAAClD,EAAD,OAGJ,kCACG+C,EAAO,cAAC5C,EAAD,IAAe,cAACT,EAAD,UC5BhByD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.15c9774e.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCrSZXU-8UnKyBVZ2K7VTWQ5Wil7kY1nxI\",\n  authDomain: \"chat-11f5e.firebaseapp.com\",\n  databaseURL: \"https://chat-11f5e.firebaseio.com\",\n  projectId: \"chat-11f5e\",\n  storageBucket: \"chat-11f5e.appspot.com\",\n  messagingSenderId: \"875437241790\",\n  appId: \"1:875437241790:web:83369f76ff254d185ff5ef\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nfunction App() {\n  const [user] = useAuthState(auth);\n  console.log(user);\n\n  return (\n    <div className=\"App\">\n      <div className=\"background\"></div>\n      {user && (\n        <header className=\"header\">\n          <div className=\"user\">\n            <img src={user.photoURL} alt='' />\n            <span>{user.displayName}</span>\n          </div>\n          <SignOut />\n        </header>\n      )}\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <button className=\"signin\" onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button  className=\"signout\" onClick={() => auth.signOut()}>Sign out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n  const [messages] = useCollectionData(query, {idField: 'id'});\n  const [formValue, setFormValue] = useState('');\n  const sendMessage = async(event) => {\n    event.preventDefault();\n    const { uid, photoURL } = auth.currentUser;\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (\n    <>\n      <div className=\"chat\">\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div className=\"dummy\" ref={dummy}></div>\n      </div>\n      <label className=\"wrapper\">\n        <form className=\"form\">\n          <input value={formValue} onChange={event => setFormValue(event.target.value)} />\n          <button onClick={sendMessage}>Send</button>\n        </form>\n      </label>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n  return (\n    <div className={`message ${messageClass}`} title=\"yo\">\n      <img src={photoURL} alt='' />\n      <span>{text}</span>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}